# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "ehci_pci" "ahci" "usb_storage" "sd_mod" "sdhci_pci" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/afeb6ae3-4096-4962-aa9e-e2165046f0cc";
      fsType = "btrfs";
      options = [ "subvol=@"  "discard=async" "noatime" "compress-force=zstd:1" ];
    };

  boot.initrd.luks.devices."luks-929d78f2-1fe8-4aa5-9bc6-5044eb3dde93".device = "/dev/disk/by-uuid/929d78f2-1fe8-4aa5-9bc6-5044eb3dde93";

  swapDevices =
    [ { device = "/dev/disk/by-uuid/a88a9860-e0cc-49a2-895c-561713288fc9"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp0s25.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp3s0.useDHCP = lib.mkDefault true;

  hardware.opengl.enable = true;
  hardware.opengl.driSupport = true;
 
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
